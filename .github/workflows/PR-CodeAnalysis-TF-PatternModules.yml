name: Terraform Code Analysis
run-name: Bicep Param Auto-Validation Triggered by @${{ github.actor }}
permissions:
    id-token: write
    contents: read
    
on:
  pull_request:
    paths:
        - 'modules/azure/**/**.tf'
    types: [opened, reopened,synchronize, edited]

env:
  location: australiaeast

jobs:
  
  runPreMergeChecks:
    name: IaC Static Code Analysis
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        #with:
            #since_last_remote_commit: true 

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Get all doc and params files that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            params:
              - '**.tf'

      - name: Run step if param file(s) change
        id: run-if-param-changed
        # NOTE: Ensure all outputs are prefixed by the same key used above e.g. `params(...)` | `doc_(...)` when trying to access the `any_changed` output.
        if: steps.changed-files-yaml.outputs.params_any_changed == 'true'  
        env:
          PARAMS_ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.params_all_changed_files }}
          #$PARAMS_ALL_CHANGED_FILES includes a list of bicepparam files (full path) that have changed, separated by space e.g config/sub-plq-lz-corp-001/spf/prd/default.bicepparam config/sub-plq-lz-corp-001/spf/tst/default.bicepparam
        run: |
          echo "One or more PARAM file(s) has changed."
          echo "List all the files that have changed: $PARAMS_ALL_CHANGED_FILES"
          echo -e "Running TF Formart"
          echo -e "--------------------------------------------------------"
          echo -e "--------------------------------------------------------"
          for file in ${PARAMS_ALL_CHANGED_FILES}; do
            terraform fmt -write=false -check $file  # Run terraform fmt on the specific file
            echo -e "----------------------$((i))---------------------------------"
          done 

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
              
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'