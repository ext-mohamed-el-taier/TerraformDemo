name: Terraform Code Analysis
run-name: Terraform Code Auto-Validation Triggered by @${{ github.actor }}
permissions:
    id-token: write
    contents: read
    
on:
  pull_request:
    paths:
        - 'modules/azure/**/**.tf'
    types: [opened, reopened,synchronize, edited]

env:
  location: australiaeast

jobs:
  
  runPreMergeChecks:
    name: IaC Static Code Analysis
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Install required packages on GitHub runner
        run: |
          set -e

          echo "Updating APT and installing required packages..."

          sudo apt update && sudo apt upgrade -y

          sudo apt install --no-install-recommends -y \
            apt-transport-https \
            apt-utils \
            build-essential \
            ca-certificates \
            curl \
            wget \
            git \
            gnupg \
            gpg \
            jq \
            make \
            python3-crcmod \
            python3-dev \
            python3-pip \
            python3-virtualenv \
            shellcheck \
            unzip \
            zip \

          sudo apt autoremove --purge -y

          echo "Environment is ready!"

      - name: Run TF Sec
        shell: bash
        run: |
          echo "Check if CSRs were exported and set CSRExportedFlag if CSRs were exported to decide whether to run signCerts job.."

      - name: Run TF Lint
        shell: bash
        run: |
          echo "Check if CSRs were exported and set CSRExportedFlag if CSRs were exported to decide whether to run signCerts job.."

              
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'